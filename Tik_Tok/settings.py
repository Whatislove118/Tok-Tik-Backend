"""
Django settings for Tik_Tok project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
from datetime import timedelta
from pathlib import Path
import os
import dj_database_url


# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.conf import settings

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1-xcc%b^wn-w&!d_1wc)%em)ir-9o*ftjwx3ny^*4x5vwj+!-c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:4200',
)
CORS_ORIGIN_REGEX_WHITELIST = (
    'http://localhost:4200',
)

CORS_EXPOSE_HEADERS = (
    'access-token',
    'refresh-token'
)

CORS_ALLOW_HEADERS = [
    'access-token',
    'refresh-token',
    'accept',
    'accept-encoding',
    'authorization',
    'enctype',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]
# CORS_ALLOW_ALL_ORIGINS = True

# Cross Origin Request Settings (CROS)


# Application definition
# import datetime
#
# JWT_AUTH = {
#
#     'JWT_VERIFY': True,
#     'JWT_VERIFY_EXPIRATION': True,
#     'JWT_EXPIRATION_DELTA': datetime.timedelta(seconds=3000),
#     'JWT_AUTH_HEADER_PREFIX': 'Bearer',
#
# }

INSTALLED_APPS = [
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_simplejwt',
    'accounts',
    'jwtauth',
    'profilesettings',
    'statistic',
    'video',
    'djoser',
    'drf_yasg'


]


REST_FRAMEWORK = {
  'DEFAULT_AUTHENTICATION_CLASSES': (
    'rest_framework_simplejwt.authentication.JWTAuthentication',
  ),
}

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'jwtauth.jwt_valid_middleware.ValidJWTMiddleware',
    # 'jwtauth.jwt_ias_middleware.IasJWTMiddleware',
]


ROOT_URLCONF = 'Tik_Tok.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Tik_Tok.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': 'db.sqlite3',
        # 'USER': 's263069',
        # 'PASSWORD': 'jfl392',
        # 'HOST': '127.0.0.1',
        # 'PORT': '5500'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PWD_MODULE = "django.contrib.auth.password_validation."

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": f"{AUTH_PWD_MODULE}UserAttributeSimilarityValidator",
    },

]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
     os.path.join(BASE_DIR, 'static')
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': settings.SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',
}

# DJOSER SETTINGS
DEFAULT_USER_SERIALIZER = 'users.serializers.CustomUserSerializer'
DJOSER = {
    'PASSWORD_RESET_CONFIRM_URL': '#/password/reset/confirm/{uid}/{token}',
    'USERNAME_RESET_CONFIRM_URL': '#/username/reset/confirm/{uid}/{token}',
    'ACTIVATION_URL': '#/activate/{uid}/{token}',
    'SEND_ACTIVATION_EMAIL': False,
    'SEND_CONFIRMATION_EMAIL': False,
    'SET_PASSWORD_RETYPE': False,
    # 'SERIALIZERS': {
    #     'user_create': DEFAULT_USER_SERIALIZER,  # checked
    #     'user': DEFAULT_USER_SERIALIZER,  # checked
    #     'current_user': DEFAULT_USER_SERIALIZER,  # checked
    #     'activation': 'djoser.serializers.ActivationSerializer',  # checked
    #     'password_reset': 'djoser.serializers.SendEmailResetSerializer', # checked
    #     'password_reset_confirm': 'djoser.serializers.PasswordResetConfirmSerializer', # checked
    #     'password_reset_confirm_retype': 'djoser.serializers.PasswordResetConfirmRetypeSerializer',
    #     'set_password': 'djoser.serializers.SetPasswordSerializer', # checked
    #     'set_password_retype': 'djoser.serializers.SetPasswordRetypeSerializer',
    #     'set_username': 'djoser.serializers.SetUsernameSerializer',# checked
    #     'set_username_retype': 'djoser.serializers.SetUsernameRetypeSerializer',
    #     'username_reset': 'djoser.serializers.SendEmailResetSerializer',# checked
    #     'username_reset_confirm': 'djoser.serializers.UsernameResetConfirmSerializer',# checked
    #     'username_reset_confirm_retype': 'djoser.serializers.UsernameResetConfirmRetypeSerializer',# checked
    #     'user_create_password_retype': 'djoser.serializers.UserCreatePasswordRetypeSerializer',# checked
    #     'user_delete': 'djoser.serializers.UserDeleteSerializer',# checked
    #
    # }
}
